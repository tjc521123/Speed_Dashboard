mutate(across(.cols  = where(is.numeric),
.fns   = ~ mean(.x, na.rm = TRUE),
.names = 'Group Mean - {.col}'))
data %>%
select(!matches("_"))
data %>%
select(!matches("-"))
data %>%
select(!matches("-"|"_"))
data %>%
select(!matches("-|_"))
data %>%
select(matches(^"-|_"))
data %>%
select(matches("^-|_"))
data %>%
select(matches("-|_"))
data %>%
select(!c(matches('Group Mean -'))
data %>%
data %>%
select(-matches('Group Mean -')))
data %>%
select(-starts_with('Group Mean -')))
data %>%
select(-starts_with('Group Mean -'))
data %>%
select(-starts_with('Group Mean -'), -contains("_"))
data %>%
select(-starts_with('Group Mean -'), -c(age_group, month_group))
data <- data %>%
ungroup()
data %>%
select(-starts_with('Group Mean -'), -c(age_group, month_group))
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
shiny::runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
data %>%
select(`Group Mean - CMJ Imp Mom`, Date, age_group) %>%
View()
data %>%
select(`Group Mean - CMJ Imp Mom`, Date, age_group, month_group) %>%
View()
data$month_group
as.Date(data$month_group)
runApp('Monthly_Reporting/Monthly Report/dashboard')
as_datetime(data$month_group)
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
data %>%
select(Date, as_datetime(month_group))
data %>%
mutate(
month_group = as_datetime(month_group)
) %>%
select(Date, month_group)
data %>%
mutate(
month_group = as.Date(as_datetime(month_group))
) %>%
select(Date, month_group)
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
data[data$age_group == 1, "Broad Jump"]
mean(data[data$age_group == 1, "Broad Jump"])
mean(data[data$age_group == 1, "Broad Jump"], na.rm = TRUE)
str(data[data$age_group == 1, "Broad Jump"])
mean(as.numeic(data[data$age_group == 1, "Broad Jump"]), na.rm = TRUE)
mean(as.numeric(data[data$age_group == 1, "Broad Jump"]), na.rm = TRUE)
colMeans(data[data$age_group == 1, "Broad Jump"])
colMeans(data[data$age_group == 1, "Broad Jump"], na.rm = TRUE)
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
t.test(data$`Broad Jump`)
?t.test
count(data$`Broad Jump`)
nrow(data$`Broad Jump`)
length(data$`Broad Jump`)
sum(is.na(data$`Broad Jump`))
sd(data$`Broad Jump`, na.rm = TRUE) / sqrt(length(data$`Broad Jump`) - sum(is.na(data$`Broad Jump`)))
t.test(data$`Broad Jump`)
72.38104 + 0.7453056
?sd
conf_interval <- function(x) {
conf_int <- 2 * sd(x, na.rm = TRUE) / sqrt(length(x) - sum(is.na(x)))
return(2 * conf_int)
}
test <- 'Broad Jump'
data %>%
select(age_group, month_group, Date, test) %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(test, na.rm = TRUE),
conf_up = Average + conf_interval(test),
conf_lo = Average - conf_interval(test)
)
data %>%
select(age_group, month_group, Date, all_of(test)) %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(test, na.rm = TRUE),
conf_up = Average + conf_interval(test),
conf_lo = Average - conf_interval(test)
)
data <- data %>%
mutate(month_group = as.Date(as_datetime(month_group)))
data$month_group
data %>%
select(age_group, month_group, Date, all_of(test)) %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(test, na.rm = TRUE),
conf_up = Average + conf_interval(test),
conf_lo = Average - conf_interval(test)
)
?one_of
vars <- c('age_group', 'month_group', 'Date', test)
data[, vars]
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(test, na.rm = TRUE),
conf_up = Average + conf_interval(test),
conf_lo = Average - conf_interval(test)
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(.[[4]], na.rm = TRUE),
conf_up = Average + conf_interval(.[[4]]),
conf_lo = Average - conf_interval(.[[4]])
)
runApp('Monthly_Reporting/Monthly Report/dashboard')
data[, vars] %>%
group_by(`Age Group`, month_group) %>%
mutate(
Average = mean(.[[4]], na.rm = TRUE),
conf_up = Average + conf_interval(.[[4]]),
conf_lo = Average - conf_interval(.[[4]])
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(.[[4]], na.rm = TRUE),
conf_up = Average + conf_interval(.[[4]]),
conf_lo = Average - conf_interval(.[[4]])
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(.[[4]], na.rm = TRUE),
conf_up = Average + conf_interval(.[[4]]),
conf_lo = Average - conf_interval(.[[4]])
) %>%
View()
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(.[[4]], na.rm = TRUE),
conf_up = Average + conf_interval(.[[4]]),
conf_lo = Average - conf_interval(.[[4]])
) %>%
View()
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(vars[4], na.rm = TRUE),
conf_up = Average + conf_interval(vars[4]),
conf_lo = Average - conf_interval(vars[4])
) %>%
View()
vars[4]
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
Average = mean(.[vars[4]], na.rm = TRUE),
conf_up = Average + conf_interval(vars[4]),
conf_lo = Average - conf_interval(vars[4])
) %>%
View()
aggregate(data$`Broad Jump`, by = list(data$age_group, data$month_group), FUN = mean)
aggregate(data$`Broad Jump`, by = list(data$age_group, data$month_group), FUN = mean, na.rm = TRUE)
aggregate(data$`Broad Jump`, by = list(data$age_group, data$month_group), FUN = mean, na.rm = TRUE) %>%
mutate(
age_group = Group.1,
)
aggregate(data$`Broad Jump`, by = list(data$age_group, data$month_group), FUN = mean, na.rm = TRUE) %>%
mutate(
age_group = Group.1,
month_group = Group.2
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
average = mean(`Broad Jump`, na.rm = TRUE),
conf_up = average + conf_interval(average),
conf_lo = average - conf_interval(average)
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
average = mean(`Broad Jump`, na.rm = TRUE),
conf_up = average + conf_interval(`Broad Jump`),
conf_lo = average - conf_interval(`Broad Jump`)
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
average = mean(.[[4]], na.rm = TRUE),
conf_up = average + conf_interval(.[[4]]),
conf_lo = average - conf_interval(.[[4]])
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
average = mean(.data[[4]], na.rm = TRUE),
conf_up = average + conf_interval(.data[[4]]),
conf_lo = average - conf_interval(.data[[4]])
)
data[, vars] %>%
group_by(age_group, month_group) %>%
mutate(
average = mean(.data[[4]], na.rm = TRUE),
conf_up = average + conf_interval(.data[4]),
conf_lo = average - conf_interval(.data[4])
)
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
data[, vars]
data[, vars] %>%
print(.)
data[, vars] %>%
print(.data)
data[, vars] %>%
print(.data[1])
data[, vars] %>%
print(.data[[1]])
data[, vars[4]]
data[, c(age_group, month_group, vars[4])]
data[, c('age_group', 'month_group', vars[4])]
library(pacman)
pacman::p_load(shiny,
tidyverse,
zoo,
ggplot2,
readxl,
writexl,
plotly,
DT,
tools,
rmarkdown)
data[, c('age_group', 'month_group', vars[4])] %>%
group_by(age_group, month_group) %>%
mutate(average = mean(!!var[4], na.rm = TRUE))
data[, c('age_group', 'month_group', vars[4])] %>%
group_by(age_group, month_group) %>%
mutate(average = mean(!!vars[4], na.rm = TRUE))
data[, c('age_group', 'month_group', vars[4])] %>%
group_by(age_group, month_group) %>%
select(.[[4]]) %>%
mutate(average = mean(na.rm = TRUE))
data[, c('age_group', 'month_group', vars[4])] %>%
group_by(age_group, month_group) %>%
select(.[[3]]) %>%
mutate(average = mean(na.rm = TRUE))
?mutate
data
data_clean
data_clean
where(is.numeric(data_clean))
data_clean %>%
select(where(is.numeric))
data_clean %>%
select(where(is.numeric)) %>%
names()
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
) %>%
group_by(age_group, month_group) %>%
mutate(across(.cols  = all_of(cols_mutate),
.fns   = ~ mean(.x, na.rm = TRUE),
.names = 'Group Mean - {.col}')) %>%
mutate(across(.cols  = all_of(cols_mutate),
.fns   = ~ mean(.x, na.rm = TRUE) + conf_interval(.x),
.names = 'Group CI-Hi - {.col}')) %>%
mutate(across(.cols  = all_of(cols_mutate),
.fns   = ~ mean(.x, na.rm = TRUE) - conf_interval(.x),
.names = 'Group CI-Lo - {.col}')) %>%
ungroup() %>%
View()
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
)
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
) %>%
group_by(age_group, month_group)
cols_mutate <- data_clean %>% select(where(is.numeric)) %>% names()
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
) %>%
group_by(age_group, month_group) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE),
.names = 'Group Mean - {.col}'))
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
) %>%
group_by(age_group, month_group) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE),
.names = 'Group Mean - {.col}')) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE) + conf_interval(.x),
.names = 'Group CI-Hi - {.col}'))
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
) %>%
group_by(age_group, month_group) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE),
.names = 'Group Mean - {.col}')) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE) + conf_interval(.x),
.names = 'Group CI-Hi - {.col}')) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE) - conf_interval(.x),
.names = 'Group CI-Lo - {.col}'))
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
) %>%
group_by(age_group, month_group) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE),
.names = 'Group Mean - {.col}')) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE) + conf_interval(.x),
.names = 'Group CI-Hi - {.col}')) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE) - conf_interval(.x),
.names = 'Group CI-Lo - {.col}')) %>%
View()
data_clean %>%
mutate(age_group   = ifelse(Age > 13, 1, 0),
`Age Group` = as.factor(ifelse(age_group, '14+', '13U')),
month_group = ifelse(day(Date) <= 15,
ddays(as.numeric(floor_date(Date, unit = 'month'))),
ddays(as.numeric(floor_date(Date + ddays(20), unit = 'month')))),
month_group = as.Date(as_datetime(month_group))
) %>%
group_by(age_group, month_group) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE),
.names = 'Group Mean - {.col}')) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE) + conf_interval(.x),
.names = 'Group CI-Hi - {.col}')) %>%
mutate(across(.cols = all_of(cols_mutate),
.fns = ~ mean(.x, na.rm = TRUE) - conf_interval(.x),
.names = 'Group CI-Lo - {.col}')) -> data_ci
select_names <- lapply(names(data_ci), function(x) {
grep(pattern = test, x = x, value = TRUE)
})
select_names
select_names <- lapply(names(data_ci), function(x) {
names(data_ci)[grep(pattern = test, x = x, value = TRUE)]
})
select_names
data_ci %>% select(contains(test))
runApp('Monthly_Reporting/Monthly Report/dashboard')
?geom_errorbar
?rename
conf_lo <- paste0('Group CI-Lo - ', test)
conf_up <- paste0('Group CI-Hi - ', test)
Average <- paste0('Group Mean - ', test)
data_ci %>%
select('Age Group', 'month_group', contains(test))
data_ci <- data_ci %>% ungroup()
data_ci %>%
select('Age Group', 'month_group', contains(test))
data_ci %>%
select('Age Group', 'month_group', contains(test)) %>%
rename(average = !!Average, lower = !!conf_lo, upper = !!conf_up)
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
data_ci %>% select(all_of(vars))
data_ci %>% select(all_of(cols_mutate))
data_ci %>% select(all_of(cols_mutate)) %>%
pivot_longer()
runApp('Monthly_Reporting/Monthly Report/dashboard')
data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(by = `Age Group`)
data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(cols = !c(`Age Group`))
data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(cols = !c(`Age Group`)) %>%
ggplot(mapping = aes(x = name, color = `Age Group`)) +
geom_boxplot(y = value)
data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(cols = !c(`Age Group`)) %>%
ggplot(mapping = aes(x = name, color = `Age Group`)) +
geom_boxplot()
plot <- data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(cols = !c(`Age Group`)) %>%
ggplot(mapping = aes(x = name, color = `Age Group`)) +
geom_boxplot()
ggplotly(plot)
plot <- data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(cols = !c(`Age Group`)) %>%
ggplot(mapping = aes(x = name, color = `Age Group`)) +
geom_boxplot()
ggplotly(plot)
plot
plot <- data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(cols = !c(`Age Group`)) %>%
ggplot(mapping = aes(x = name, color = `Age Group`, group = name)) +
geom_boxplot()
plot
stack(data_ci)
data_ci %>% select('Age Group', all_of(cols_mutate), -Age)
data_ci %>% select('Age Group', all_of(cols_mutate), -Age) %>%
stack()
data_ci %>% select('Age Group', all_of(cols_mutate), -Age) %>%
stack() %>%
ggplot(mapping = aes(x = ind, y = values)) +
geom_boxplot()
plot <- data_ci %>% select('Age Group', all_of(cols_mutate)) %>%
pivot_longer(cols = !c(`Age Group`)) %>%
ggplot(mapping = aes(x = name, color = `Age Group`, group = name)) +
geom_boxplot(stat = 'identity')
plot
runApp('Monthly_Reporting/Monthly Report/dashboard')
shiny::runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
?req
library(pacman)
pacman::p_load(shiny,
tidyverse,
zoo,
ggplot2,
readxl,
writexl,
plotly,
DT,
tools,
rmarkdown)
?req
runApp('Monthly_Reporting/Monthly Report/dashboard')
?validate
?need
runApp('Monthly_Reporting/Monthly Report/dashboard')
ncol(data)
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
?facet_wrap
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('Monthly_Reporting/Monthly Report/dashboard')
runApp('C:/Users/Caitie Mayo/Desktop/Speed_Dashboard/Speed-Dashboard/Dashboard - New')
